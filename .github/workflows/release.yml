# Github Actions 工作流程設定檔案
# Node.js CI

# 觸發條件：當對 master 或 alpha 分支進行 push 或 pull request 時
name: Node.js CI
on:
  push:
    branches: [ master, alpha ]
  pull_request:
    branches: [ master, alpha ]

# 環境變數
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# 工作列表
jobs:
  # 第一個工作：檢查是否需要釋出版本
  check_release:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.check_release.outputs.should_release }}
      new_tag: ${{ steps.check_release.outputs.new_tag }}
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - uses: actions/checkout@v3
      - name: 使用 Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - name: 檢查是否需要釋出版本
        id: check_release
        run: |
          OUTPUT=$(npx semantic-release -d --dry-run 2>&1)
          echo "$OUTPUT"
          if [[ $OUTPUT == *"Published release"* ]]; then
            echo "::set-output name=should_release::true"
            NEW_TAG=$(echo "$OUTPUT" | grep -oP "Published release \K[0-9.]+")
            echo "::set-output name=new_tag::$NEW_TAG"
          else
            echo "::set-output name=should_release::false"
            echo "::set-output name=new_tag::"
          fi
  # 第二個工作：建置與釋出
  build_and_release:
    runs-on: ubuntu-latest
    needs: check_release
    if: ${{ needs.check_release.outputs.should_release == 'true' }}
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - uses: actions/checkout@v3
      - name: 使用 Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - name: 安裝 .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: 還原依賴
        run: dotnet restore

      - name: 建置專案
        run: dotnet build --configuration Release --no-restore

      - name: 發佈專案
        run: dotnet publish --configuration Release --no-build --output ./publish

      - name: 執行 Semantic-release
        run: npx semantic-release

      - name: Zip the Build
        run: zip -r publish.zip ./publish/

      - name: 上傳發行檔至 Github Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./publish.zip
          tag_name: ${{ needs.check_release.outputs.new_tag }}
