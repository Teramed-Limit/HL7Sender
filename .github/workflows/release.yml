name: Node.js CI
on:
  push:
    branches: [ master, alpha ]
  pull_request:
    branches: [ master, alpha ]
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  check_release:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.check_release.outputs.should_release }}
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - name: Check if release is needed
        id: check_release
        run: |
          SHOULD_RELEASE=$(npx semantic-release -d --dry-run 2>&1 | grep -q "Published release" > /dev/null && echo "true" || echo "false")
          echo "should_release=$SHOULD_RELEASE" >> $GITHUB_ENV
          echo "::set-output name=should_release::$SHOULD_RELEASE"
  build_and_release:
    runs-on: ubuntu-latest
    needs: check_release
    if: needs.check_release.outputs.should_release == 'true'
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
#      - name: Setup .NET
#        uses: actions/setup-dotnet@v1
#        with:
#          dotnet-version: '6.0.x'
#      - name: Restore dependencies
#        run: dotnet restore
#      - name: Build
#        run: dotnet build --configuration Release --no-restore
#      - name: Publish
#        run: dotnet publish --configuration Release --no-build --output ./publish
#      - name: Archive打包輸出成 zip
#        run: |
#          zip -r publish.zip ./publish
      - name: 安裝 semantic-release
        run: npx semantic-release
#      - name: 上傳 zip 檔案至 GitHub Release
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.semantic_release.outputs.upload_url }}
#          asset_path: ./publish.zip
#          asset_name: publish.zip
#          asset_content_type: application/zip